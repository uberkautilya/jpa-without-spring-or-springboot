<?xml version="1.0" encoding="UTF-8" ?>
<persistence xmlns="http://java.sun.com/xml/ns/persistence"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xsi:schemaLocation="http://java.sun.com/xml/ns/persistence http://java.sun.com/xml/ns/persistence/persistence_2_0.xsd"
             version="2.0">
    <persistence-unit name="myApp" transaction-type="RESOURCE_LOCAL">
        <provider>org.hibernate.jpa.HibernatePersistenceProvider</provider>
        <properties>
            <property name="javax.persistence.jdbc.url" value="jdbc:h2:tcp://localhost/~/test"/>
            <property name="javax.persistence.jdbc.driver" value="org.h2.Driver"/>
            <property name="javax.persistence.jdbc.user" value="sa"/>
            <property name="javax.persistence.jdbc.password" value=""/>
            <property name="hibernate.show_sql" value="true"/>
            <property name="hibernate.format_sql" value="true"/>
            <property name="hibernate.dialect" value="org.hibernate.dialect.H2Dialect"/>
            <property name="hibernate.hbm2ddl.auto" value="create"/>
        </properties>
    </persistence-unit>

    <persistence-unit name="readApp" transaction-type="RESOURCE_LOCAL">
        <provider>org.hibernate.jpa.HibernatePersistenceProvider</provider>
        <properties>
            <property name="javax.persistence.jdbc.url" value="jdbc:h2:tcp://localhost/~/test"/>
            <property name="javax.persistence.jdbc.driver" value="org.h2.Driver"/>
            <property name="javax.persistence.jdbc.user" value="sa"/>
            <property name="javax.persistence.jdbc.password" value=""/>
            <property name="hibernate.show_sql" value="true"/>
            <property name="hibernate.format_sql" value="true"/>
            <property name="hibernate.dialect" value="org.hibernate.dialect.H2Dialect"/>
            <property name="hibernate.hbm2ddl.auto" value="none"/>
        </properties>
    </persistence-unit>
</persistence>
<!--
The persistence.xml defines the context of the JPA - metadata on the behavior, transaction related option

xmlns... is the schema of the xml used

<persistence-unit> defines one Database you are connecting to - one DB location:
Its name (here 'myApp') is arbitrary - used while creating the entityManagerFactory
There can be as many persistence units as required

transaction-type can be JTA alternatively - Java Transaction API if you need multiple databases in a single transaction

<provider> is the implementation of the JPA - an instance provider - here it is Hibernate, if it were toplink it would be different
jdbc url has tcp as it h2 is running in a server mode - here in localhost

hibernate.dialect is the grammar that the JPA uses while communicating with the Database - way of query for each db is slightly different

hibernate.hbm2ddl.auto create-drop will create schema after dropping if exists, creating everything from scratch
create-drop is used for development as it would destroy any existing data
Alternative values: update, ..refer documentation

ddl being data definition language from the hibernate java entities
-->